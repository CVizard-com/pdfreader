name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
#   test:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest

  docker_build_and_push:
       runs-on: ubuntu-latest
#        needs: ["test"]
       steps:
       - name: Checkout code
         uses: actions/checkout@v3

       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v1

       - name: Login to Docker Registry
         uses: docker/login-action@v1
         with:
           registry: https://cvizard.com:5001
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}

       - name: Build and push
         uses: docker/build-push-action@v2
         with:
           context: .
           push: true
           tags: cvizard.com:5001/pdfreader:${{ github.sha }}
           
  deploy:
      runs-on: ubuntu-latest
      needs: ["docker_build_and_push"]
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: install ssh
        run: sudo apt-get install -y ssh
        
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: https://cvizard.com:5001
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker login cvizard.com:5001 -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sed -i 's|cvizard.com:5001/pdfreader:.*|cvizard.com:5001/pdfreader:${{ github.sha }}|' CVizard/docker-compose.yml
            cd CVizard && docker compose stop pdfreader && docker compose build pdfreader && docker compose up -d pdfreader

